buildscript {
    repositories {
        jcenter()
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
    }

    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
        classpath 'org.spongepowered:event-impl-gen:0.8-SNAPSHOT'
    }
}

version = '3.0-SNAPSHOT'

ext.api = project
apply from: 'gradle/java.gradle'
apply plugin: 'com.github.johnrengelman.shadow'

// Project dependencies
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.12'

    // Dependencies provided by Minecraft
    compile 'com.google.guava:guava:17.0'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'org.apache.commons:commons-lang3:3.3.2'

    compile 'com.google.code.findbugs:jsr305:1.3.9'
    compile 'com.google.inject:guice:4.0'

    compile 'ninja.leaping.configurate:configurate-hocon:2.0'
    compile 'ninja.leaping.configurate:configurate-gson:2.0'
    compile 'ninja.leaping.configurate:configurate-yaml:2.0'

    compile 'com.flowpowered:flow-math:1.0.1'
    compile 'com.flowpowered:flow-noise:1.0.1-SNAPSHOT'

    compile 'org.ow2.asm:asm:5.0.3'

    compile 'org.spongepowered:event-gen-core:0.8-SNAPSHOT'
}

// JAR manifest configuration
jar {
    manifest {
        attributes('Main-Class': 'org.spongepowered.api.util.InformativeMain')
    }
}

apply plugin: 'event-impl-gen'

// Compile time code generator for the event factory
genEventImpl {
    includeSrc = [
            'src/main/java/org/spongepowered/api/event/achievement/',
            'src/main/java/org/spongepowered/api/event/action/',
            'src/main/java/org/spongepowered/api/event/block/',
            'src/main/java/org/spongepowered/api/event/command/',
            'src/main/java/org/spongepowered/api/event/data/',
            'src/main/java/org/spongepowered/api/event/entity/',
            'src/main/java/org/spongepowered/api/event/game/',
            'src/main/java/org/spongepowered/api/event/inventory/',
            'src/main/java/org/spongepowered/api/event/network/',
            'src/main/java/org/spongepowered/api/event/plugin/',
            'src/main/java/org/spongepowered/api/event/rcon/',
            'src/main/java/org/spongepowered/api/event/server/',
            'src/main/java/org/spongepowered/api/event/statistic/',
            'src/main/java/org/spongepowered/api/event/user/',
            'src/main/java/org/spongepowered/api/event/world/',
            'src/main/java/org/spongepowered/api/event/Event.java',
            'src/main/java/org/spongepowered/api/event/GameEvent.java'
    ]
    excludeSrc = []
    outputDir = "src/main/java/"
    outputFactory = "org.spongepowered.api.event.SpongeEventFactory"
    eventImplCreateMethod = "org.spongepowered.api.event.SpongeEventFactoryUtils.createEventImpl"
    sortPriorityPrefix = "original"
    groupingPrefixes = ['from': 'to']
    validateCode = true
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

shadowJar {
    classifier = 'shaded'
}

artifacts {
    archives shadowJar
}
