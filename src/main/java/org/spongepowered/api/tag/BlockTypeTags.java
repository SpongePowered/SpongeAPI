/*
 * This file is part of SpongeAPI, licensed under the MIT License (MIT).
 *
 * Copyright (c) SpongePowered <https://www.spongepowered.org>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.spongepowered.api.tag;

import org.spongepowered.api.ResourceKey;
import org.spongepowered.api.Sponge;
import org.spongepowered.api.block.BlockType;
import org.spongepowered.api.registry.DefaultedRegistryReference;
import org.spongepowered.api.registry.RegistryKey;
import org.spongepowered.api.registry.RegistryScope;
import org.spongepowered.api.registry.RegistryScopes;
import org.spongepowered.api.registry.RegistryTypes;

/**
 * <!-- This file is automatically generated. Any manual changes will be overwritten. -->
 */
@SuppressWarnings("unused")
@RegistryScopes(scopes = RegistryScope.DATA_PACK)
public final class BlockTypeTags {

    // @formatter:off
    public static final DefaultedRegistryReference<Tag<BlockType>> ACACIA_LOGS = BlockTypeTags.key(ResourceKey.minecraft("acacia_logs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> ANVIL = BlockTypeTags.key(ResourceKey.minecraft("anvil"));

    public static final DefaultedRegistryReference<Tag<BlockType>> BAMBOO_PLANTABLE_ON = BlockTypeTags.key(ResourceKey.minecraft("bamboo_plantable_on"));

    public static final DefaultedRegistryReference<Tag<BlockType>> BANNERS = BlockTypeTags.key(ResourceKey.minecraft("banners"));

    public static final DefaultedRegistryReference<Tag<BlockType>> BASE_STONE_NETHER = BlockTypeTags.key(ResourceKey.minecraft("base_stone_nether"));

    public static final DefaultedRegistryReference<Tag<BlockType>> BASE_STONE_OVERWORLD = BlockTypeTags.key(ResourceKey.minecraft("base_stone_overworld"));

    public static final DefaultedRegistryReference<Tag<BlockType>> BEACON_BASE_BLOCKS = BlockTypeTags.key(ResourceKey.minecraft("beacon_base_blocks"));

    public static final DefaultedRegistryReference<Tag<BlockType>> BEDS = BlockTypeTags.key(ResourceKey.minecraft("beds"));

    public static final DefaultedRegistryReference<Tag<BlockType>> BEE_GROWABLES = BlockTypeTags.key(ResourceKey.minecraft("bee_growables"));

    public static final DefaultedRegistryReference<Tag<BlockType>> BEEHIVES = BlockTypeTags.key(ResourceKey.minecraft("beehives"));

    public static final DefaultedRegistryReference<Tag<BlockType>> BIRCH_LOGS = BlockTypeTags.key(ResourceKey.minecraft("birch_logs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> BUTTONS = BlockTypeTags.key(ResourceKey.minecraft("buttons"));

    public static final DefaultedRegistryReference<Tag<BlockType>> CAMPFIRES = BlockTypeTags.key(ResourceKey.minecraft("campfires"));

    public static final DefaultedRegistryReference<Tag<BlockType>> CARPETS = BlockTypeTags.key(ResourceKey.minecraft("carpets"));

    public static final DefaultedRegistryReference<Tag<BlockType>> CLIMBABLE = BlockTypeTags.key(ResourceKey.minecraft("climbable"));

    public static final DefaultedRegistryReference<Tag<BlockType>> CORAL_BLOCKS = BlockTypeTags.key(ResourceKey.minecraft("coral_blocks"));

    public static final DefaultedRegistryReference<Tag<BlockType>> CORAL_PLANTS = BlockTypeTags.key(ResourceKey.minecraft("coral_plants"));

    public static final DefaultedRegistryReference<Tag<BlockType>> CORALS = BlockTypeTags.key(ResourceKey.minecraft("corals"));

    public static final DefaultedRegistryReference<Tag<BlockType>> CRIMSON_STEMS = BlockTypeTags.key(ResourceKey.minecraft("crimson_stems"));

    public static final DefaultedRegistryReference<Tag<BlockType>> CROPS = BlockTypeTags.key(ResourceKey.minecraft("crops"));

    public static final DefaultedRegistryReference<Tag<BlockType>> DARK_OAK_LOGS = BlockTypeTags.key(ResourceKey.minecraft("dark_oak_logs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> DOORS = BlockTypeTags.key(ResourceKey.minecraft("doors"));

    public static final DefaultedRegistryReference<Tag<BlockType>> DRAGON_IMMUNE = BlockTypeTags.key(ResourceKey.minecraft("dragon_immune"));

    public static final DefaultedRegistryReference<Tag<BlockType>> ENDERMAN_HOLDABLE = BlockTypeTags.key(ResourceKey.minecraft("enderman_holdable"));

    public static final DefaultedRegistryReference<Tag<BlockType>> FENCE_GATES = BlockTypeTags.key(ResourceKey.minecraft("fence_gates"));

    public static final DefaultedRegistryReference<Tag<BlockType>> FENCES = BlockTypeTags.key(ResourceKey.minecraft("fences"));

    public static final DefaultedRegistryReference<Tag<BlockType>> FIRE = BlockTypeTags.key(ResourceKey.minecraft("fire"));

    public static final DefaultedRegistryReference<Tag<BlockType>> FLOWER_POTS = BlockTypeTags.key(ResourceKey.minecraft("flower_pots"));

    public static final DefaultedRegistryReference<Tag<BlockType>> FLOWERS = BlockTypeTags.key(ResourceKey.minecraft("flowers"));

    public static final DefaultedRegistryReference<Tag<BlockType>> GOLD_ORES = BlockTypeTags.key(ResourceKey.minecraft("gold_ores"));

    public static final DefaultedRegistryReference<Tag<BlockType>> GUARDED_BY_PIGLINS = BlockTypeTags.key(ResourceKey.minecraft("guarded_by_piglins"));

    public static final DefaultedRegistryReference<Tag<BlockType>> HOGLIN_REPELLENTS = BlockTypeTags.key(ResourceKey.minecraft("hoglin_repellents"));

    public static final DefaultedRegistryReference<Tag<BlockType>> ICE = BlockTypeTags.key(ResourceKey.minecraft("ice"));

    public static final DefaultedRegistryReference<Tag<BlockType>> IMPERMEABLE = BlockTypeTags.key(ResourceKey.minecraft("impermeable"));

    public static final DefaultedRegistryReference<Tag<BlockType>> INFINIBURN_END = BlockTypeTags.key(ResourceKey.minecraft("infiniburn_end"));

    public static final DefaultedRegistryReference<Tag<BlockType>> INFINIBURN_NETHER = BlockTypeTags.key(ResourceKey.minecraft("infiniburn_nether"));

    public static final DefaultedRegistryReference<Tag<BlockType>> INFINIBURN_OVERWORLD = BlockTypeTags.key(ResourceKey.minecraft("infiniburn_overworld"));

    public static final DefaultedRegistryReference<Tag<BlockType>> JUNGLE_LOGS = BlockTypeTags.key(ResourceKey.minecraft("jungle_logs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> LEAVES = BlockTypeTags.key(ResourceKey.minecraft("leaves"));

    public static final DefaultedRegistryReference<Tag<BlockType>> LOGS = BlockTypeTags.key(ResourceKey.minecraft("logs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> LOGS_THAT_BURN = BlockTypeTags.key(ResourceKey.minecraft("logs_that_burn"));

    public static final DefaultedRegistryReference<Tag<BlockType>> MUSHROOM_GROW_BLOCK = BlockTypeTags.key(ResourceKey.minecraft("mushroom_grow_block"));

    public static final DefaultedRegistryReference<Tag<BlockType>> NON_FLAMMABLE_WOOD = BlockTypeTags.key(ResourceKey.minecraft("non_flammable_wood"));

    public static final DefaultedRegistryReference<Tag<BlockType>> NYLIUM = BlockTypeTags.key(ResourceKey.minecraft("nylium"));

    public static final DefaultedRegistryReference<Tag<BlockType>> OAK_LOGS = BlockTypeTags.key(ResourceKey.minecraft("oak_logs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> PIGLIN_REPELLENTS = BlockTypeTags.key(ResourceKey.minecraft("piglin_repellents"));

    public static final DefaultedRegistryReference<Tag<BlockType>> PLANKS = BlockTypeTags.key(ResourceKey.minecraft("planks"));

    public static final DefaultedRegistryReference<Tag<BlockType>> PORTALS = BlockTypeTags.key(ResourceKey.minecraft("portals"));

    public static final DefaultedRegistryReference<Tag<BlockType>> PRESSURE_PLATES = BlockTypeTags.key(ResourceKey.minecraft("pressure_plates"));

    public static final DefaultedRegistryReference<Tag<BlockType>> PREVENT_MOB_SPAWNING_INSIDE = BlockTypeTags.key(ResourceKey.minecraft("prevent_mob_spawning_inside"));

    public static final DefaultedRegistryReference<Tag<BlockType>> RAILS = BlockTypeTags.key(ResourceKey.minecraft("rails"));

    public static final DefaultedRegistryReference<Tag<BlockType>> SAND = BlockTypeTags.key(ResourceKey.minecraft("sand"));

    public static final DefaultedRegistryReference<Tag<BlockType>> SAPLINGS = BlockTypeTags.key(ResourceKey.minecraft("saplings"));

    public static final DefaultedRegistryReference<Tag<BlockType>> SHULKER_BOXES = BlockTypeTags.key(ResourceKey.minecraft("shulker_boxes"));

    public static final DefaultedRegistryReference<Tag<BlockType>> SIGNS = BlockTypeTags.key(ResourceKey.minecraft("signs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> SLABS = BlockTypeTags.key(ResourceKey.minecraft("slabs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> SMALL_FLOWERS = BlockTypeTags.key(ResourceKey.minecraft("small_flowers"));

    public static final DefaultedRegistryReference<Tag<BlockType>> SOUL_FIRE_BASE_BLOCKS = BlockTypeTags.key(ResourceKey.minecraft("soul_fire_base_blocks"));

    public static final DefaultedRegistryReference<Tag<BlockType>> SOUL_SPEED_BLOCKS = BlockTypeTags.key(ResourceKey.minecraft("soul_speed_blocks"));

    public static final DefaultedRegistryReference<Tag<BlockType>> SPRUCE_LOGS = BlockTypeTags.key(ResourceKey.minecraft("spruce_logs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> STAIRS = BlockTypeTags.key(ResourceKey.minecraft("stairs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> STANDING_SIGNS = BlockTypeTags.key(ResourceKey.minecraft("standing_signs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> STONE_BRICKS = BlockTypeTags.key(ResourceKey.minecraft("stone_bricks"));

    public static final DefaultedRegistryReference<Tag<BlockType>> STONE_PRESSURE_PLATES = BlockTypeTags.key(ResourceKey.minecraft("stone_pressure_plates"));

    public static final DefaultedRegistryReference<Tag<BlockType>> STRIDER_WARM_BLOCKS = BlockTypeTags.key(ResourceKey.minecraft("strider_warm_blocks"));

    public static final DefaultedRegistryReference<Tag<BlockType>> TALL_FLOWERS = BlockTypeTags.key(ResourceKey.minecraft("tall_flowers"));

    public static final DefaultedRegistryReference<Tag<BlockType>> TRAPDOORS = BlockTypeTags.key(ResourceKey.minecraft("trapdoors"));

    public static final DefaultedRegistryReference<Tag<BlockType>> UNDERWATER_BONEMEALS = BlockTypeTags.key(ResourceKey.minecraft("underwater_bonemeals"));

    public static final DefaultedRegistryReference<Tag<BlockType>> UNSTABLE_BOTTOM_CENTER = BlockTypeTags.key(ResourceKey.minecraft("unstable_bottom_center"));

    public static final DefaultedRegistryReference<Tag<BlockType>> VALID_SPAWN = BlockTypeTags.key(ResourceKey.minecraft("valid_spawn"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WALL_CORALS = BlockTypeTags.key(ResourceKey.minecraft("wall_corals"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WALL_POST_OVERRIDE = BlockTypeTags.key(ResourceKey.minecraft("wall_post_override"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WALL_SIGNS = BlockTypeTags.key(ResourceKey.minecraft("wall_signs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WALLS = BlockTypeTags.key(ResourceKey.minecraft("walls"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WARPED_STEMS = BlockTypeTags.key(ResourceKey.minecraft("warped_stems"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WART_BLOCKS = BlockTypeTags.key(ResourceKey.minecraft("wart_blocks"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WITHER_IMMUNE = BlockTypeTags.key(ResourceKey.minecraft("wither_immune"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WITHER_SUMMON_BASE_BLOCKS = BlockTypeTags.key(ResourceKey.minecraft("wither_summon_base_blocks"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WOODEN_BUTTONS = BlockTypeTags.key(ResourceKey.minecraft("wooden_buttons"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WOODEN_DOORS = BlockTypeTags.key(ResourceKey.minecraft("wooden_doors"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WOODEN_FENCES = BlockTypeTags.key(ResourceKey.minecraft("wooden_fences"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WOODEN_PRESSURE_PLATES = BlockTypeTags.key(ResourceKey.minecraft("wooden_pressure_plates"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WOODEN_SLABS = BlockTypeTags.key(ResourceKey.minecraft("wooden_slabs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WOODEN_STAIRS = BlockTypeTags.key(ResourceKey.minecraft("wooden_stairs"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WOODEN_TRAPDOORS = BlockTypeTags.key(ResourceKey.minecraft("wooden_trapdoors"));

    public static final DefaultedRegistryReference<Tag<BlockType>> WOOL = BlockTypeTags.key(ResourceKey.minecraft("wool"));

    // @formatter:on
    private BlockTypeTags() {
    }

    private static DefaultedRegistryReference<Tag<BlockType>> key(final ResourceKey location) {
        return RegistryKey.of(RegistryTypes.BLOCK_TYPE_TAGS, location).asDefaultedReference(() -> Sponge.game().dataPackManager().registries());
    }
}
