/*
 * This file is part of SpongeAPI, licensed under the MIT License (MIT).
 *
 * Copyright (c) SpongePowered <https://www.spongepowered.org>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.spongepowered.api.world.generation.config.noise;

import org.spongepowered.api.ResourceKey;
import org.spongepowered.api.Sponge;
import org.spongepowered.api.registry.DefaultedRegistryReference;
import org.spongepowered.api.registry.Registry;
import org.spongepowered.api.registry.RegistryKey;
import org.spongepowered.api.registry.RegistryScope;
import org.spongepowered.api.registry.RegistryScopes;
import org.spongepowered.api.registry.RegistryTypes;

/**
 * <!-- This file is automatically generated. Any manual changes will be overwritten. -->
 */
@SuppressWarnings("unused")
@RegistryScopes(scopes = RegistryScope.ENGINE)
public final class Noises {

    //@formatter:off
    public static final DefaultedRegistryReference<Noise> AQUIFER_BARRIER = Noises.key(ResourceKey.minecraft("aquifer_barrier"));

    public static final DefaultedRegistryReference<Noise> AQUIFER_FLUID_LEVEL_FLOODEDNESS = Noises.key(ResourceKey.minecraft("aquifer_fluid_level_floodedness"));

    public static final DefaultedRegistryReference<Noise> AQUIFER_FLUID_LEVEL_SPREAD = Noises.key(ResourceKey.minecraft("aquifer_fluid_level_spread"));

    public static final DefaultedRegistryReference<Noise> AQUIFER_LAVA = Noises.key(ResourceKey.minecraft("aquifer_lava"));

    public static final DefaultedRegistryReference<Noise> BADLANDS_PILLAR = Noises.key(ResourceKey.minecraft("badlands_pillar"));

    public static final DefaultedRegistryReference<Noise> BADLANDS_PILLAR_ROOF = Noises.key(ResourceKey.minecraft("badlands_pillar_roof"));

    public static final DefaultedRegistryReference<Noise> BADLANDS_SURFACE = Noises.key(ResourceKey.minecraft("badlands_surface"));

    public static final DefaultedRegistryReference<Noise> CALCITE = Noises.key(ResourceKey.minecraft("calcite"));

    public static final DefaultedRegistryReference<Noise> CAVE_CHEESE = Noises.key(ResourceKey.minecraft("cave_cheese"));

    public static final DefaultedRegistryReference<Noise> CAVE_ENTRANCE = Noises.key(ResourceKey.minecraft("cave_entrance"));

    public static final DefaultedRegistryReference<Noise> CAVE_LAYER = Noises.key(ResourceKey.minecraft("cave_layer"));

    public static final DefaultedRegistryReference<Noise> CLAY_BANDS_OFFSET = Noises.key(ResourceKey.minecraft("clay_bands_offset"));

    public static final DefaultedRegistryReference<Noise> CONTINENTALNESS = Noises.key(ResourceKey.minecraft("continentalness"));

    public static final DefaultedRegistryReference<Noise> CONTINENTALNESS_LARGE = Noises.key(ResourceKey.minecraft("continentalness_large"));

    public static final DefaultedRegistryReference<Noise> EROSION = Noises.key(ResourceKey.minecraft("erosion"));

    public static final DefaultedRegistryReference<Noise> EROSION_LARGE = Noises.key(ResourceKey.minecraft("erosion_large"));

    public static final DefaultedRegistryReference<Noise> GRAVEL = Noises.key(ResourceKey.minecraft("gravel"));

    public static final DefaultedRegistryReference<Noise> GRAVEL_LAYER = Noises.key(ResourceKey.minecraft("gravel_layer"));

    public static final DefaultedRegistryReference<Noise> ICE = Noises.key(ResourceKey.minecraft("ice"));

    public static final DefaultedRegistryReference<Noise> ICEBERG_PILLAR = Noises.key(ResourceKey.minecraft("iceberg_pillar"));

    public static final DefaultedRegistryReference<Noise> ICEBERG_PILLAR_ROOF = Noises.key(ResourceKey.minecraft("iceberg_pillar_roof"));

    public static final DefaultedRegistryReference<Noise> ICEBERG_SURFACE = Noises.key(ResourceKey.minecraft("iceberg_surface"));

    public static final DefaultedRegistryReference<Noise> JAGGED = Noises.key(ResourceKey.minecraft("jagged"));

    public static final DefaultedRegistryReference<Noise> NETHER_STATE_SELECTOR = Noises.key(ResourceKey.minecraft("nether_state_selector"));

    public static final DefaultedRegistryReference<Noise> NETHER_WART = Noises.key(ResourceKey.minecraft("nether_wart"));

    public static final DefaultedRegistryReference<Noise> NETHERRACK = Noises.key(ResourceKey.minecraft("netherrack"));

    public static final DefaultedRegistryReference<Noise> NOODLE = Noises.key(ResourceKey.minecraft("noodle"));

    public static final DefaultedRegistryReference<Noise> NOODLE_RIDGE_A = Noises.key(ResourceKey.minecraft("noodle_ridge_a"));

    public static final DefaultedRegistryReference<Noise> NOODLE_RIDGE_B = Noises.key(ResourceKey.minecraft("noodle_ridge_b"));

    public static final DefaultedRegistryReference<Noise> NOODLE_THICKNESS = Noises.key(ResourceKey.minecraft("noodle_thickness"));

    public static final DefaultedRegistryReference<Noise> OFFSET = Noises.key(ResourceKey.minecraft("offset"));

    public static final DefaultedRegistryReference<Noise> ORE_GAP = Noises.key(ResourceKey.minecraft("ore_gap"));

    public static final DefaultedRegistryReference<Noise> ORE_VEIN_A = Noises.key(ResourceKey.minecraft("ore_vein_a"));

    public static final DefaultedRegistryReference<Noise> ORE_VEIN_B = Noises.key(ResourceKey.minecraft("ore_vein_b"));

    public static final DefaultedRegistryReference<Noise> ORE_VEININESS = Noises.key(ResourceKey.minecraft("ore_veininess"));

    public static final DefaultedRegistryReference<Noise> PACKED_ICE = Noises.key(ResourceKey.minecraft("packed_ice"));

    public static final DefaultedRegistryReference<Noise> PATCH = Noises.key(ResourceKey.minecraft("patch"));

    public static final DefaultedRegistryReference<Noise> PILLAR = Noises.key(ResourceKey.minecraft("pillar"));

    public static final DefaultedRegistryReference<Noise> PILLAR_RARENESS = Noises.key(ResourceKey.minecraft("pillar_rareness"));

    public static final DefaultedRegistryReference<Noise> PILLAR_THICKNESS = Noises.key(ResourceKey.minecraft("pillar_thickness"));

    public static final DefaultedRegistryReference<Noise> POWDER_SNOW = Noises.key(ResourceKey.minecraft("powder_snow"));

    public static final DefaultedRegistryReference<Noise> RIDGE = Noises.key(ResourceKey.minecraft("ridge"));

    public static final DefaultedRegistryReference<Noise> SOUL_SAND_LAYER = Noises.key(ResourceKey.minecraft("soul_sand_layer"));

    public static final DefaultedRegistryReference<Noise> SPAGHETTI_2D = Noises.key(ResourceKey.minecraft("spaghetti_2d"));

    public static final DefaultedRegistryReference<Noise> SPAGHETTI_2D_ELEVATION = Noises.key(ResourceKey.minecraft("spaghetti_2d_elevation"));

    public static final DefaultedRegistryReference<Noise> SPAGHETTI_2D_MODULATOR = Noises.key(ResourceKey.minecraft("spaghetti_2d_modulator"));

    public static final DefaultedRegistryReference<Noise> SPAGHETTI_2D_THICKNESS = Noises.key(ResourceKey.minecraft("spaghetti_2d_thickness"));

    public static final DefaultedRegistryReference<Noise> SPAGHETTI_3D_1 = Noises.key(ResourceKey.minecraft("spaghetti_3d_1"));

    public static final DefaultedRegistryReference<Noise> SPAGHETTI_3D_2 = Noises.key(ResourceKey.minecraft("spaghetti_3d_2"));

    public static final DefaultedRegistryReference<Noise> SPAGHETTI_3D_RARITY = Noises.key(ResourceKey.minecraft("spaghetti_3d_rarity"));

    public static final DefaultedRegistryReference<Noise> SPAGHETTI_3D_THICKNESS = Noises.key(ResourceKey.minecraft("spaghetti_3d_thickness"));

    public static final DefaultedRegistryReference<Noise> SPAGHETTI_ROUGHNESS = Noises.key(ResourceKey.minecraft("spaghetti_roughness"));

    public static final DefaultedRegistryReference<Noise> SPAGHETTI_ROUGHNESS_MODULATOR = Noises.key(ResourceKey.minecraft("spaghetti_roughness_modulator"));

    public static final DefaultedRegistryReference<Noise> SURFACE = Noises.key(ResourceKey.minecraft("surface"));

    public static final DefaultedRegistryReference<Noise> SURFACE_SECONDARY = Noises.key(ResourceKey.minecraft("surface_secondary"));

    public static final DefaultedRegistryReference<Noise> SURFACE_SWAMP = Noises.key(ResourceKey.minecraft("surface_swamp"));

    public static final DefaultedRegistryReference<Noise> TEMPERATURE = Noises.key(ResourceKey.minecraft("temperature"));

    public static final DefaultedRegistryReference<Noise> TEMPERATURE_LARGE = Noises.key(ResourceKey.minecraft("temperature_large"));

    public static final DefaultedRegistryReference<Noise> VEGETATION = Noises.key(ResourceKey.minecraft("vegetation"));

    public static final DefaultedRegistryReference<Noise> VEGETATION_LARGE = Noises.key(ResourceKey.minecraft("vegetation_large"));

    //@formatter:on
    private Noises() {
    }

    public static Registry<Noise> registry() {
        return Sponge.server().registry(RegistryTypes.NOISE);
    }

    private static DefaultedRegistryReference<Noise> key(final ResourceKey location) {
        return RegistryKey.of(RegistryTypes.NOISE, location).asDefaultedReference(Sponge::server);
    }
}
