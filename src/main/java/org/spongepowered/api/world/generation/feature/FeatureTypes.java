/*
 * This file is part of SpongeAPI, licensed under the MIT License (MIT).
 *
 * Copyright (c) SpongePowered <https://www.spongepowered.org>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.spongepowered.api.world.generation.feature;

import org.spongepowered.api.ResourceKey;
import org.spongepowered.api.Sponge;
import org.spongepowered.api.registry.DefaultedRegistryReference;
import org.spongepowered.api.registry.Registry;
import org.spongepowered.api.registry.RegistryKey;
import org.spongepowered.api.registry.RegistryScope;
import org.spongepowered.api.registry.RegistryScopes;
import org.spongepowered.api.registry.RegistryTypes;

/**
 * <!-- This file is automatically generated. Any manual changes will be overwritten. -->
 */
@SuppressWarnings("unused")
@RegistryScopes(scopes = RegistryScope.ENGINE)
public final class FeatureTypes {

    public static final DefaultedRegistryReference<FeatureType> BAMBOO = FeatureTypes.key(ResourceKey.minecraft("bamboo"));

    public static final DefaultedRegistryReference<FeatureType> BASALT_COLUMNS = FeatureTypes.key(ResourceKey.minecraft("basalt_columns"));

    public static final DefaultedRegistryReference<FeatureType> BASALT_PILLAR = FeatureTypes.key(ResourceKey.minecraft("basalt_pillar"));

    public static final DefaultedRegistryReference<FeatureType> BLOCK_COLUMN = FeatureTypes.key(ResourceKey.minecraft("block_column"));

    public static final DefaultedRegistryReference<FeatureType> BLOCK_PILE = FeatureTypes.key(ResourceKey.minecraft("block_pile"));

    public static final DefaultedRegistryReference<FeatureType> BLUE_ICE = FeatureTypes.key(ResourceKey.minecraft("blue_ice"));

    public static final DefaultedRegistryReference<FeatureType> BONUS_CHEST = FeatureTypes.key(ResourceKey.minecraft("bonus_chest"));

    public static final DefaultedRegistryReference<FeatureType> CHORUS_PLANT = FeatureTypes.key(ResourceKey.minecraft("chorus_plant"));

    public static final DefaultedRegistryReference<FeatureType> CORAL_CLAW = FeatureTypes.key(ResourceKey.minecraft("coral_claw"));

    public static final DefaultedRegistryReference<FeatureType> CORAL_MUSHROOM = FeatureTypes.key(ResourceKey.minecraft("coral_mushroom"));

    public static final DefaultedRegistryReference<FeatureType> CORAL_TREE = FeatureTypes.key(ResourceKey.minecraft("coral_tree"));

    public static final DefaultedRegistryReference<FeatureType> DELTA_FEATURE = FeatureTypes.key(ResourceKey.minecraft("delta_feature"));

    public static final DefaultedRegistryReference<FeatureType> DESERT_WELL = FeatureTypes.key(ResourceKey.minecraft("desert_well"));

    public static final DefaultedRegistryReference<FeatureType> DISK = FeatureTypes.key(ResourceKey.minecraft("disk"));

    public static final DefaultedRegistryReference<FeatureType> DRIPSTONE_CLUSTER = FeatureTypes.key(ResourceKey.minecraft("dripstone_cluster"));

    public static final DefaultedRegistryReference<FeatureType> END_GATEWAY = FeatureTypes.key(ResourceKey.minecraft("end_gateway"));

    public static final DefaultedRegistryReference<FeatureType> END_ISLAND = FeatureTypes.key(ResourceKey.minecraft("end_island"));

    public static final DefaultedRegistryReference<FeatureType> END_PLATFORM = FeatureTypes.key(ResourceKey.minecraft("end_platform"));

    public static final DefaultedRegistryReference<FeatureType> END_SPIKE = FeatureTypes.key(ResourceKey.minecraft("end_spike"));

    public static final DefaultedRegistryReference<FeatureType> FILL_LAYER = FeatureTypes.key(ResourceKey.minecraft("fill_layer"));

    public static final DefaultedRegistryReference<FeatureType> FLOWER = FeatureTypes.key(ResourceKey.minecraft("flower"));

    public static final DefaultedRegistryReference<FeatureType> FOREST_ROCK = FeatureTypes.key(ResourceKey.minecraft("forest_rock"));

    public static final DefaultedRegistryReference<FeatureType> FOSSIL = FeatureTypes.key(ResourceKey.minecraft("fossil"));

    public static final DefaultedRegistryReference<FeatureType> FREEZE_TOP_LAYER = FeatureTypes.key(ResourceKey.minecraft("freeze_top_layer"));

    public static final DefaultedRegistryReference<FeatureType> GEODE = FeatureTypes.key(ResourceKey.minecraft("geode"));

    public static final DefaultedRegistryReference<FeatureType> GLOWSTONE_BLOB = FeatureTypes.key(ResourceKey.minecraft("glowstone_blob"));

    public static final DefaultedRegistryReference<FeatureType> HUGE_BROWN_MUSHROOM = FeatureTypes.key(ResourceKey.minecraft("huge_brown_mushroom"));

    public static final DefaultedRegistryReference<FeatureType> HUGE_FUNGUS = FeatureTypes.key(ResourceKey.minecraft("huge_fungus"));

    public static final DefaultedRegistryReference<FeatureType> HUGE_RED_MUSHROOM = FeatureTypes.key(ResourceKey.minecraft("huge_red_mushroom"));

    public static final DefaultedRegistryReference<FeatureType> ICEBERG = FeatureTypes.key(ResourceKey.minecraft("iceberg"));

    public static final DefaultedRegistryReference<FeatureType> ICE_SPIKE = FeatureTypes.key(ResourceKey.minecraft("ice_spike"));

    public static final DefaultedRegistryReference<FeatureType> KELP = FeatureTypes.key(ResourceKey.minecraft("kelp"));

    public static final DefaultedRegistryReference<FeatureType> LAKE = FeatureTypes.key(ResourceKey.minecraft("lake"));

    public static final DefaultedRegistryReference<FeatureType> LARGE_DRIPSTONE = FeatureTypes.key(ResourceKey.minecraft("large_dripstone"));

    public static final DefaultedRegistryReference<FeatureType> MONSTER_ROOM = FeatureTypes.key(ResourceKey.minecraft("monster_room"));

    public static final DefaultedRegistryReference<FeatureType> MULTIFACE_GROWTH = FeatureTypes.key(ResourceKey.minecraft("multiface_growth"));

    public static final DefaultedRegistryReference<FeatureType> NETHERRACK_REPLACE_BLOBS = FeatureTypes.key(ResourceKey.minecraft("netherrack_replace_blobs"));

    public static final DefaultedRegistryReference<FeatureType> NETHER_FOREST_VEGETATION = FeatureTypes.key(ResourceKey.minecraft("nether_forest_vegetation"));

    public static final DefaultedRegistryReference<FeatureType> NO_BONEMEAL_FLOWER = FeatureTypes.key(ResourceKey.minecraft("no_bonemeal_flower"));

    public static final DefaultedRegistryReference<FeatureType> NO_OP = FeatureTypes.key(ResourceKey.minecraft("no_op"));

    public static final DefaultedRegistryReference<FeatureType> ORE = FeatureTypes.key(ResourceKey.minecraft("ore"));

    public static final DefaultedRegistryReference<FeatureType> POINTED_DRIPSTONE = FeatureTypes.key(ResourceKey.minecraft("pointed_dripstone"));

    public static final DefaultedRegistryReference<FeatureType> RANDOM_BOOLEAN_SELECTOR = FeatureTypes.key(ResourceKey.minecraft("random_boolean_selector"));

    public static final DefaultedRegistryReference<FeatureType> RANDOM_PATCH = FeatureTypes.key(ResourceKey.minecraft("random_patch"));

    public static final DefaultedRegistryReference<FeatureType> RANDOM_SELECTOR = FeatureTypes.key(ResourceKey.minecraft("random_selector"));

    public static final DefaultedRegistryReference<FeatureType> REPLACE_SINGLE_BLOCK = FeatureTypes.key(ResourceKey.minecraft("replace_single_block"));

    public static final DefaultedRegistryReference<FeatureType> ROOT_SYSTEM = FeatureTypes.key(ResourceKey.minecraft("root_system"));

    public static final DefaultedRegistryReference<FeatureType> SCATTERED_ORE = FeatureTypes.key(ResourceKey.minecraft("scattered_ore"));

    public static final DefaultedRegistryReference<FeatureType> SCULK_PATCH = FeatureTypes.key(ResourceKey.minecraft("sculk_patch"));

    public static final DefaultedRegistryReference<FeatureType> SEAGRASS = FeatureTypes.key(ResourceKey.minecraft("seagrass"));

    public static final DefaultedRegistryReference<FeatureType> SEA_PICKLE = FeatureTypes.key(ResourceKey.minecraft("sea_pickle"));

    public static final DefaultedRegistryReference<FeatureType> SIMPLE_BLOCK = FeatureTypes.key(ResourceKey.minecraft("simple_block"));

    public static final DefaultedRegistryReference<FeatureType> SIMPLE_RANDOM_SELECTOR = FeatureTypes.key(ResourceKey.minecraft("simple_random_selector"));

    public static final DefaultedRegistryReference<FeatureType> SPRING_FEATURE = FeatureTypes.key(ResourceKey.minecraft("spring_feature"));

    public static final DefaultedRegistryReference<FeatureType> TREE = FeatureTypes.key(ResourceKey.minecraft("tree"));

    public static final DefaultedRegistryReference<FeatureType> TWISTING_VINES = FeatureTypes.key(ResourceKey.minecraft("twisting_vines"));

    public static final DefaultedRegistryReference<FeatureType> UNDERWATER_MAGMA = FeatureTypes.key(ResourceKey.minecraft("underwater_magma"));

    public static final DefaultedRegistryReference<FeatureType> VEGETATION_PATCH = FeatureTypes.key(ResourceKey.minecraft("vegetation_patch"));

    public static final DefaultedRegistryReference<FeatureType> VINES = FeatureTypes.key(ResourceKey.minecraft("vines"));

    public static final DefaultedRegistryReference<FeatureType> VOID_START_PLATFORM = FeatureTypes.key(ResourceKey.minecraft("void_start_platform"));

    public static final DefaultedRegistryReference<FeatureType> WATERLOGGED_VEGETATION_PATCH = FeatureTypes.key(ResourceKey.minecraft("waterlogged_vegetation_patch"));

    public static final DefaultedRegistryReference<FeatureType> WEEPING_VINES = FeatureTypes.key(ResourceKey.minecraft("weeping_vines"));

    private FeatureTypes() {
    }

    public static Registry<FeatureType> registry() {
        return Sponge.server().registry(RegistryTypes.FEATURE_TYPE);
    }

    private static DefaultedRegistryReference<FeatureType> key(final ResourceKey location) {
        return RegistryKey.of(RegistryTypes.FEATURE_TYPE, location).asDefaultedReference(Sponge::server);
    }
}
