/*
 * This file is part of SpongeAPI, licensed under the MIT License (MIT).
 *
 * Copyright (c) SpongePowered <https://www.spongepowered.org>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.spongepowered.api.effect.sound.music;

import org.spongepowered.api.ResourceKey;
import org.spongepowered.api.Sponge;
import org.spongepowered.api.registry.DefaultedRegistryReference;
import org.spongepowered.api.registry.Registry;
import org.spongepowered.api.registry.RegistryKey;
import org.spongepowered.api.registry.RegistryScope;
import org.spongepowered.api.registry.RegistryScopes;
import org.spongepowered.api.registry.RegistryTypes;

/**
 * <!-- This file is automatically generated. Any manual changes will be overwritten. -->
 */
@SuppressWarnings("unused")
@RegistryScopes(scopes = RegistryScope.ENGINE)
public final class MusicDiscs {

    public static final DefaultedRegistryReference<MusicDisc> BLOCKS = MusicDiscs.key(ResourceKey.minecraft("blocks"));

    public static final DefaultedRegistryReference<MusicDisc> CAT = MusicDiscs.key(ResourceKey.minecraft("cat"));

    public static final DefaultedRegistryReference<MusicDisc> CHIRP = MusicDiscs.key(ResourceKey.minecraft("chirp"));

    public static final DefaultedRegistryReference<MusicDisc> CREATOR = MusicDiscs.key(ResourceKey.minecraft("creator"));

    public static final DefaultedRegistryReference<MusicDisc> CREATOR_MUSIC_BOX = MusicDiscs.key(ResourceKey.minecraft("creator_music_box"));

    public static final DefaultedRegistryReference<MusicDisc> ELEVEN = MusicDiscs.key(ResourceKey.minecraft("11"));

    public static final DefaultedRegistryReference<MusicDisc> FAR = MusicDiscs.key(ResourceKey.minecraft("far"));

    public static final DefaultedRegistryReference<MusicDisc> FIVE = MusicDiscs.key(ResourceKey.minecraft("5"));

    public static final DefaultedRegistryReference<MusicDisc> MALL = MusicDiscs.key(ResourceKey.minecraft("mall"));

    public static final DefaultedRegistryReference<MusicDisc> MELLOHI = MusicDiscs.key(ResourceKey.minecraft("mellohi"));

    public static final DefaultedRegistryReference<MusicDisc> OTHERSIDE = MusicDiscs.key(ResourceKey.minecraft("otherside"));

    public static final DefaultedRegistryReference<MusicDisc> PIGSTEP = MusicDiscs.key(ResourceKey.minecraft("pigstep"));

    public static final DefaultedRegistryReference<MusicDisc> PRECIPICE = MusicDiscs.key(ResourceKey.minecraft("precipice"));

    public static final DefaultedRegistryReference<MusicDisc> RELIC = MusicDiscs.key(ResourceKey.minecraft("relic"));

    public static final DefaultedRegistryReference<MusicDisc> STAL = MusicDiscs.key(ResourceKey.minecraft("stal"));

    public static final DefaultedRegistryReference<MusicDisc> STRAD = MusicDiscs.key(ResourceKey.minecraft("strad"));

    public static final DefaultedRegistryReference<MusicDisc> THIRTEEN = MusicDiscs.key(ResourceKey.minecraft("13"));

    public static final DefaultedRegistryReference<MusicDisc> WAIT = MusicDiscs.key(ResourceKey.minecraft("wait"));

    public static final DefaultedRegistryReference<MusicDisc> WARD = MusicDiscs.key(ResourceKey.minecraft("ward"));

    private MusicDiscs() {
    }

    public static Registry<MusicDisc> registry() {
        return Sponge.server().registry(RegistryTypes.MUSIC_DISC);
    }

    private static DefaultedRegistryReference<MusicDisc> key(final ResourceKey location) {
        return RegistryKey.of(RegistryTypes.MUSIC_DISC, location).asDefaultedReference(Sponge::server);
    }
}
